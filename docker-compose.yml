version: '2.1'

networks:
  ps-net:
    driver: bridge

volumes:
  prometheus_data: { }
  grafana_data: { }
  loki_data: { }

services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: on-failure
    networks:
      - ps-net

  web:
    build:
      context: .
    container_name: web
    ports:
      - 5004:5000
    command: python manage.py run -h 0.0.0.0
    volumes:
      - .:/usr/src/app
    environment:
      - FLASK_DEBUG=0
      - APP_SETTINGS=project.server.config.DevelopmentConfig
    depends_on:
      - redis
    #    tty: true
    networks:
      - ps-net
    restart: unless-stopped
  #    logging:
  #      driver: loki
  #      options:
  #        loki-url: "loki:3100/loki/api/v1/push"

  worker:
    build:
      context: .
    container_name: worker
    command: python manage.py run_worker
    volumes:
      - .:/usr/src/app
    environment:
      - APP_SETTINGS=project.server.config.DevelopmentConfig
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - ps-net
  #    logging:
  #      driver: loki
  #      options:
  #        loki-url: "http://localhost:3100/loki/api/v1/push"

  #  dashboard:
  #    build: ./project/dashboard
  #    container_name: dashboard
  #    ports:
  #      - 9181:9181
  #    command: rq-dashboard -H redis
  #    depends_on:
  #      - redis

  #  loki:
  #    image: grafana/loki:2.0.0
  #    container_name: loki
  #    command: -config.file=/mnt/config/loki-config.yml
  #    restart: unless-stopped
  #    networks:
  #      - ps-net
  #    volumes:
  #      - ./loki-config.yaml:/mnt/config/loki-config.yml
  #      - loki_data:/loki

  prometheus:
    image: prom/prometheus:v2.30.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - ps-net

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - ps-net

  nodeexporter:
    image: prom/node-exporter:v1.2.2
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - ps-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.40.0
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - ps-net

  grafana:
    image: grafana/grafana:8.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - ps-net

  pushgateway:
    image: prom/pushgateway:v1.4.1
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - ps-net

  caddy:
    image: caddy:2.3.0
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    networks:
      - ps-net